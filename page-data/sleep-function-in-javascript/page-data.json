{"componentChunkName":"component---src-templates-blog-post-js","path":"/sleep-function-in-javascript/","result":{"data":{"site":{"siteMetadata":{"title":"itsopensource"}},"markdownRemark":{"id":"1a4acd8e-0133-576b-a27c-8b2c263e5ff6","excerpt":"There are times while writing javascript, when we might want to halt the execution of Javascript for a small period say 2 seconds. May be while writing test‚Ä¶","html":"<p>There are times while writing javascript, when we might want to halt the execution of Javascript for a small period say 2 seconds. May be while writing test cases, or avoiding race condition, etc. Javascript provides (natively) no way to do this, but we can write our own <code class=\"language-text\">sleep</code> function.</p>\n<p>To do this we will use <code class=\"language-text\">Promise</code>/<code class=\"language-text\">await</code>, <code class=\"language-text\">setTimeout</code> (let‚Äôs just face it no one wants to use <code class=\"language-text\">callbacks</code> anymore ü§ê).</p>\n<center><sub>The sleep function</sub></center>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">sleep</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">sec <span class=\"token operator\">=</span> <span class=\"token number\">2</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> ms <span class=\"token operator\">=</span> sec <span class=\"token operator\">*</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Promise</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">resolve</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span>resolve<span class=\"token punctuation\">,</span> ms<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<center><sub>Usage</sub></center>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'start'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> delay <span class=\"token operator\">=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// time in seconds</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">taskToBeDoneAfterWait</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'done'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// with Promise</span>\n<span class=\"token function\">sleep</span><span class=\"token punctuation\">(</span>delay<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span>taskToBeDoneAfterWait<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// this will wait for minimum 3 seconds before executing taskToBeDoneAfterWait</span>\n\n<span class=\"token comment\">// with await üòé</span>\n<span class=\"token keyword\">await</span> <span class=\"token function\">sleep</span><span class=\"token punctuation\">(</span>delay<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// execution stopped for 3 seconds</span>\n<span class=\"token function\">taskToBeDoneAfterWait</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// executed after 3 seconds</span></code></pre></div>\n<hr>\n<center><sub>Sleep function in action</sub></center>\n<p><img src=\"/529cc2354160c612460a9001a870d1c9/sleep-javascript.gif\" alt=\"Sleep function in action\"></p>\n<p>That‚Äôs it, this is all we need to create our own sleep/wait function.<br>\nHope this helps üòä</p>","frontmatter":{"title":"Sleep function in Javascript","tags":["javascript"],"date":"February 16, 2020","description":"A simple sleep function in Javscript to halt the execution of Javascript for small period","author":"trishul","featuredImage":null}}},"pageContext":{"slug":"/sleep-function-in-javascript/","previous":{"fields":{"slug":"/how-to-always-keep-files-open-in-vs-code/"},"frontmatter":{"author":"shivam","tags":["vscode","tricks","how-to"],"title":"How to always keep files open in Visual Studio Code"}},"next":{"fields":{"slug":"/lazyload-images-the-browser-way/"},"frontmatter":{"author":"trishul","tags":["HTML","Javascript"],"title":"Lazyload images the browser way"}}}},"staticQueryHashes":["4268877247","764694655"],"slicesMap":{}}