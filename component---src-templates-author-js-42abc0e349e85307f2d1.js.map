{"version":3,"file":"component---src-templates-author-js-42abc0e349e85307f2d1.js","mappings":"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","sources":["webpack://gatsby-starter-blog/./src/components/bio.js","webpack://gatsby-starter-blog/./src/templates/author.js","webpack://gatsby-starter-blog/./src/templates/blog-list.js"],"sourcesContent":["/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport { useStaticQuery, graphql, Link } from \"gatsby\"\n\nimport { rhythm } from \"../utils/typography\"\n\nimport { authors } from \"../globals\"\n\nconst Bio = ({author: postWriter = ''}) => {\n  const data = useStaticQuery(graphql`\n    query BioQuery {\n      site {\n        siteMetadata {\n          author\n          social {\n            twitter\n          }\n        }\n      }\n    }\n  `)\n\n  let author = {\n    slug: '',\n    name: '',\n    twitter: '',\n\tdrupal: ''\n  };\n  if (authors[postWriter]) {\n    author.name = authors[postWriter].name;\n    author.slug = postWriter;\n    author.twitter = authors[postWriter].twitter;\n\tauthor.drupal = authors[postWriter].drupal;\n    author.bio = authors[postWriter].bio;\n  } else {\n    const { author: blogWriter, social } = data.site.siteMetadata;\n    author.name = blogWriter;\n    author.slug = 'trishul';\n    author.twitter = social.twitter;\n\tauthor.drupal = social.drupal;\n  }\n\n  return (\n    <div\n      style={{\n        display: `flex`,\n        marginBottom: rhythm(2.5),\n      }}\n    >\n      <Link\n        to={`/author/${author.slug}`}\n        style={{\n          minWidth: 50,\n          minHeight: 50,\n          marginRight: rhythm(1 / 2),\n          marginBottom: 0,\n          overflow: `hidden`,\n          boxShadow: 'none'\n        }}\n      >\n        <img\n          alt={author.name}\n          style={{\n            width: 50,\n            height: `auto`,\n            borderRadius: `100%`,\n          }}\n          src={`/${author.slug}.jpg`}\n        />\n      </Link>\n      <p>\n        <strong>{author.name}</strong> {author.bio}.\n        <br/> \n        {\n          (author.twitter && author.twitter !== \"\") ?\n          (<a target=\"_blank\" rel=\"noopener noreferrer\" href={`https://twitter.com/${author.twitter}`}>\n            @{author.twitter}\n          </a>):\n          null\n\t\t    }\n        {\n          (author.drupal && author.drupal !== \"\") ?\n          (<div> Drupal Profile: <a target=\"_blank\" rel=\"noopener noreferrer\" href={`https://drupal.org/u/${author.drupal}`}>\n              {author.drupal}</a>\n          </div>):\n          null\n        }\n      </p>\n    </div>\n  )\n}\n\nexport default Bio\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport Bio from \"../components/bio\"\nimport List from \"../templates/blog-list\"\n\nconst AuthorView = ({ location, pageContext, data }) => {\n  const { author } = pageContext\n  const title = `Blogs by \"${author}\"`;\n  return (\n    <Layout location={location} title={title}>\n      <SEO title={title} />\n      <Bio author={author} />\n      <List data={data} />\n    </Layout>\n  )\n}\n\nexport const pageQuery = graphql`\n  query AuthorPage($author: String) {\n    allMarkdownRemark(\n      limit: 1000\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { author: { eq: $author } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          fields {\n            slug\n          }\n          excerpt\n          timeToRead\n          frontmatter {\n            title\n            tags\n            date\n          }\n        }\n      }\n    }\n  }\n`\n\nexport default AuthorView;\n","import React from \"react\"\nimport { Link } from \"gatsby\"\n\n\nimport { rhythm } from \"../utils/typography\"\n\nexport default class BlogList extends React.Component {\n  render() {\n    const { data } = this.props\n    const posts = data.allMarkdownRemark.edges\n\n    return (\n      <>\n        {posts.map(({ node }) => {\n          const title = node.frontmatter.title || node.fields.slug\n          return (\n            <article key={node.fields.slug}>\n              <header>\n                <h3\n                  style={{\n                    marginBottom: rhythm(1 / 4),\n                  }}\n                >\n                  <Link style={{ boxShadow: `none` }} to={node.fields.slug}>\n                    {title}\n                  </Link>\n                </h3>\n                <small>{node.frontmatter.date}</small>\n              </header>\n              <section>\n                <p\n                  dangerouslySetInnerHTML={{\n                    __html: node.frontmatter.description || node.excerpt,\n                  }}\n                />\n              </section>\n            </article>\n          )\n        })}\n      </>\n    )\n  }\n}\n"],"names":["_ref","author","postWriter","data","useStaticQuery","slug","name","twitter","drupal","authors","bio","blogWriter","social","site","siteMetadata","React","style","display","marginBottom","rhythm","Link","to","minWidth","minHeight","marginRight","overflow","boxShadow","alt","width","height","borderRadius","src","target","rel","href","location","pageContext","title","Layout","SEO","Bio","List","BlogList","_React$Component","apply","arguments","_inheritsLoose","prototype","render","this","props","posts","allMarkdownRemark","edges","map","node","frontmatter","fields","key","date","dangerouslySetInnerHTML","__html","description","excerpt"],"sourceRoot":""}